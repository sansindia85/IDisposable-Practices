‰
jG:\Prototypes\IDisposable-Practices\demo8\src\WordCounter\WordCounter.Api\Controllers\HealthzController.cs
	namespace 	
WordCounter
 
. 
Api 
. 
Controllers %
{ 
public 

class 
HealthzController "
:# $

Controller% /
{ 
[ 	
HttpGet	 
] 
public 
IActionResult 
Index "
(" #
)# $
{		 	
return

 
Ok

 
(

 
)

 
;

 
} 	
} 
} ½
lG:\Prototypes\IDisposable-Practices\demo8\src\WordCounter\WordCounter.Api\Controllers\WordCountController.cs
	namespace 	
WordCounter
 
. 
Api 
. 
Controllers %
{ 
[ 
ApiController 
] 
[		 
Route		 

(		
 
$str		 
)		 
]		 
public

 

class

 
WordCountController

 $
:

% &
ControllerBase

' 5
{ 
private 
readonly 
ILogger  
<  !
WordCountController! 4
>4 5
_logger6 =
;= >
public 
WordCountController "
(" #
ILogger# *
<* +
WordCountController+ >
>> ?
logger@ F
)F G
{ 	
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
[ 	 
ProducesResponseType	 
( 
typeof $
($ %
int% (
)( )
,) *
(+ ,
int, /
)/ 0
HttpStatusCode0 >
.> ?
OK? A
)A B
]B C
public 
IActionResult 
Get  
(  !
WordCountModel! /
input0 5
)5 6
{ 	
var 
count 
= 
$num 
; 
if 
( 
! 
string 
. 
IsNullOrEmpty %
(% &
input& +
.+ ,
Line, 0
)0 1
)1 2
{ 
count 
= 
input 
. 
Line "
." #
Split# (
(( )
$char) ,
), -
.- .
Length. 4
;4 5
} 
_logger 
. 
LogDebug 
( 
$" 
$str (
{( )
count) .
}. /
$str/ =
"= >
)> ?
;? @
return 
Ok 
( 
count 
) 
; 
} 	
} 
}   è
bG:\Prototypes\IDisposable-Practices\demo8\src\WordCounter\WordCounter.Api\Models\WordCountModel.cs
	namespace 	
WordCounter
 
. 
Api 
. 
Models  
{ 
public 

class 
WordCountModel 
{ 
public 
string 
Line 
{ 
get  
;  !
set" %
;% &
}' (
} 
} Í

TG:\Prototypes\IDisposable-Practices\demo8\src\WordCounter\WordCounter.Api\Program.cs
	namespace 	
WordCounter
 
. 
Api 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{		 	
CreateHostBuilder

 
(

 
args

 "
)

" #
.

# $
Build

$ )
(

) *
)

* +
.

+ ,
Run

, /
(

/ 0
)

0 1
;

1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} ¡
TG:\Prototypes\IDisposable-Practices\demo8\src\WordCounter\WordCounter.Api\Startup.cs
	namespace 	
WordCounter
 
. 
Api 
{		 
public

 

class

 
Startup

 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddControllers #
(# $
)$ %
;% &
services 
. 
AddSwaggerGen "
(" #
c# $
=>% '
{ 
c 
. 

SwaggerDoc 
( 
$str !
,! "
new# &
OpenApiInfo' 2
{3 4
Title5 :
=; <
$str= N
,N O
VersionP W
=X Y
$strZ ^
}_ `
)` a
;a b
} 
) 
; 
} 	
public 
void 
	Configure 
( 
IApplicationBuilder 1
app2 5
,5 6
IWebHostEnvironment7 J
envK N
)N O
{ 	
if 
( 
env 
. 
IsDevelopment !
(! "
)" #
)# $
{   
app!! 
.!! %
UseDeveloperExceptionPage!! -
(!!- .
)!!. /
;!!/ 0
app"" 
."" 

UseSwagger"" 
("" 
)""  
;""  !
app## 
.## 
UseSwaggerUI##  
(##  !
c##! "
=>### %
c##& '
.##' (
SwaggerEndpoint##( 7
(##7 8
$str##8 R
,##R S
$str##T h
)##h i
)##i j
;##j k
}$$ 
app&& 
.&& 

UseRouting&& 
(&& 
)&& 
;&& 
app(( 
.(( 
UseEndpoints(( 
((( 
	endpoints(( &
=>((' )
{)) 
	endpoints** 
.** 
MapControllers** (
(**( )
)**) *
;*** +
}++ 
)++ 
;++ 
},, 	
}-- 
}.. 